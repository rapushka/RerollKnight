//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity resourcesServiceEntity { get { return GetGroup(ServicesMatcher.ResourcesService).GetSingleEntity(); } }
    public Code.Ecs.Components.ResourcesService resourcesService { get { return resourcesServiceEntity.resourcesService; } }
    public bool hasResourcesService { get { return resourcesServiceEntity != null; } }

    public ServicesEntity SetResourcesService(Code.Services.Interfaces.IResourcesService newValue) {
        if (hasResourcesService) {
            throw new Entitas.EntitasException("Could not set ResourcesService!\n" + this + " already has an entity with Code.Ecs.Components.ResourcesService!",
                "You should check if the context already has a resourcesServiceEntity before setting it or use context.ReplaceResourcesService().");
        }
        var entity = CreateEntity();
        entity.AddResourcesService(newValue);
        return entity;
    }

    public void ReplaceResourcesService(Code.Services.Interfaces.IResourcesService newValue) {
        var entity = resourcesServiceEntity;
        if (entity == null) {
            entity = SetResourcesService(newValue);
        } else {
            entity.ReplaceResourcesService(newValue);
        }
    }

    public void RemoveResourcesService() {
        resourcesServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.Ecs.Components.ResourcesService resourcesService { get { return (Code.Ecs.Components.ResourcesService)GetComponent(ServicesComponentsLookup.ResourcesService); } }
    public bool hasResourcesService { get { return HasComponent(ServicesComponentsLookup.ResourcesService); } }

    public void AddResourcesService(Code.Services.Interfaces.IResourcesService newValue) {
        var index = ServicesComponentsLookup.ResourcesService;
        var component = (Code.Ecs.Components.ResourcesService)CreateComponent(index, typeof(Code.Ecs.Components.ResourcesService));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceResourcesService(Code.Services.Interfaces.IResourcesService newValue) {
        var index = ServicesComponentsLookup.ResourcesService;
        var component = (Code.Ecs.Components.ResourcesService)CreateComponent(index, typeof(Code.Ecs.Components.ResourcesService));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveResourcesService() {
        RemoveComponent(ServicesComponentsLookup.ResourcesService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherResourcesService;

    public static Entitas.IMatcher<ServicesEntity> ResourcesService {
        get {
            if (_matcherResourcesService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.ResourcesService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherResourcesService = matcher;
            }

            return _matcherResourcesService;
        }
    }
}
