//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity identifierServiceEntity { get { return GetGroup(ServicesMatcher.IdentifierService).GetSingleEntity(); } }
    public Code.Ecs.Components.IdentifierService identifierService { get { return identifierServiceEntity.identifierService; } }
    public bool hasIdentifierService { get { return identifierServiceEntity != null; } }

    public ServicesEntity SetIdentifierService(Code.Services.Interfaces.IIdentifierService<int> newValue) {
        if (hasIdentifierService) {
            throw new Entitas.EntitasException("Could not set IdentifierService!\n" + this + " already has an entity with Code.Ecs.Components.IdentifierService!",
                "You should check if the context already has a identifierServiceEntity before setting it or use context.ReplaceIdentifierService().");
        }
        var entity = CreateEntity();
        entity.AddIdentifierService(newValue);
        return entity;
    }

    public void ReplaceIdentifierService(Code.Services.Interfaces.IIdentifierService<int> newValue) {
        var entity = identifierServiceEntity;
        if (entity == null) {
            entity = SetIdentifierService(newValue);
        } else {
            entity.ReplaceIdentifierService(newValue);
        }
    }

    public void RemoveIdentifierService() {
        identifierServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.Ecs.Components.IdentifierService identifierService { get { return (Code.Ecs.Components.IdentifierService)GetComponent(ServicesComponentsLookup.IdentifierService); } }
    public bool hasIdentifierService { get { return HasComponent(ServicesComponentsLookup.IdentifierService); } }

    public void AddIdentifierService(Code.Services.Interfaces.IIdentifierService<int> newValue) {
        var index = ServicesComponentsLookup.IdentifierService;
        var component = (Code.Ecs.Components.IdentifierService)CreateComponent(index, typeof(Code.Ecs.Components.IdentifierService));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIdentifierService(Code.Services.Interfaces.IIdentifierService<int> newValue) {
        var index = ServicesComponentsLookup.IdentifierService;
        var component = (Code.Ecs.Components.IdentifierService)CreateComponent(index, typeof(Code.Ecs.Components.IdentifierService));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIdentifierService() {
        RemoveComponent(ServicesComponentsLookup.IdentifierService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherIdentifierService;

    public static Entitas.IMatcher<ServicesEntity> IdentifierService {
        get {
            if (_matcherIdentifierService == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.IdentifierService);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherIdentifierService = matcher;
            }

            return _matcherIdentifierService;
        }
    }
}
