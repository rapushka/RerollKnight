//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Ecs.Components.CurrentWeaponComponent currentWeapon { get { return (Code.Ecs.Components.CurrentWeaponComponent)GetComponent(GameComponentsLookup.CurrentWeapon); } }
    public bool hasCurrentWeapon { get { return HasComponent(GameComponentsLookup.CurrentWeapon); } }

    public void AddCurrentWeapon(GameEntity newValue) {
        var index = GameComponentsLookup.CurrentWeapon;
        var component = (Code.Ecs.Components.CurrentWeaponComponent)CreateComponent(index, typeof(Code.Ecs.Components.CurrentWeaponComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentWeapon(GameEntity newValue) {
        var index = GameComponentsLookup.CurrentWeapon;
        var component = (Code.Ecs.Components.CurrentWeaponComponent)CreateComponent(index, typeof(Code.Ecs.Components.CurrentWeaponComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentWeapon() {
        RemoveComponent(GameComponentsLookup.CurrentWeapon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentWeapon;

    public static Entitas.IMatcher<GameEntity> CurrentWeapon {
        get {
            if (_matcherCurrentWeapon == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentWeapon);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentWeapon = matcher;
            }

            return _matcherCurrentWeapon;
        }
    }
}
