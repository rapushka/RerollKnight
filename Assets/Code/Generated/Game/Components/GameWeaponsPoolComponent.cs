//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity weaponsPoolEntity { get { return GetGroup(GameMatcher.WeaponsPool).GetSingleEntity(); } }
    public Code.Ecs.Components.WeaponsPoolComponent weaponsPool { get { return weaponsPoolEntity.weaponsPool; } }
    public bool hasWeaponsPool { get { return weaponsPoolEntity != null; } }

    public GameEntity SetWeaponsPool(System.Collections.Generic.IEnumerable<UnityEngine.GameObject> newValue) {
        if (hasWeaponsPool) {
            throw new Entitas.EntitasException("Could not set WeaponsPool!\n" + this + " already has an entity with Code.Ecs.Components.WeaponsPoolComponent!",
                "You should check if the context already has a weaponsPoolEntity before setting it or use context.ReplaceWeaponsPool().");
        }
        var entity = CreateEntity();
        entity.AddWeaponsPool(newValue);
        return entity;
    }

    public void ReplaceWeaponsPool(System.Collections.Generic.IEnumerable<UnityEngine.GameObject> newValue) {
        var entity = weaponsPoolEntity;
        if (entity == null) {
            entity = SetWeaponsPool(newValue);
        } else {
            entity.ReplaceWeaponsPool(newValue);
        }
    }

    public void RemoveWeaponsPool() {
        weaponsPoolEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Ecs.Components.WeaponsPoolComponent weaponsPool { get { return (Code.Ecs.Components.WeaponsPoolComponent)GetComponent(GameComponentsLookup.WeaponsPool); } }
    public bool hasWeaponsPool { get { return HasComponent(GameComponentsLookup.WeaponsPool); } }

    public void AddWeaponsPool(System.Collections.Generic.IEnumerable<UnityEngine.GameObject> newValue) {
        var index = GameComponentsLookup.WeaponsPool;
        var component = (Code.Ecs.Components.WeaponsPoolComponent)CreateComponent(index, typeof(Code.Ecs.Components.WeaponsPoolComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWeaponsPool(System.Collections.Generic.IEnumerable<UnityEngine.GameObject> newValue) {
        var index = GameComponentsLookup.WeaponsPool;
        var component = (Code.Ecs.Components.WeaponsPoolComponent)CreateComponent(index, typeof(Code.Ecs.Components.WeaponsPoolComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponsPool() {
        RemoveComponent(GameComponentsLookup.WeaponsPool);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponsPool;

    public static Entitas.IMatcher<GameEntity> WeaponsPool {
        get {
            if (_matcherWeaponsPool == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponsPool);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponsPool = matcher;
            }

            return _matcherWeaponsPool;
        }
    }
}
