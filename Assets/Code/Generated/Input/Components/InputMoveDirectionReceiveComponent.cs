//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity moveDirectionReceiveEntity { get { return GetGroup(InputMatcher.MoveDirectionReceive).GetSingleEntity(); } }
    public Code.Ecs.Components.MoveDirectionReceiveComponent moveDirectionReceive { get { return moveDirectionReceiveEntity.moveDirectionReceive; } }
    public bool hasMoveDirectionReceive { get { return moveDirectionReceiveEntity != null; } }

    public InputEntity SetMoveDirectionReceive(UnityEngine.Vector3 newValue) {
        if (hasMoveDirectionReceive) {
            throw new Entitas.EntitasException("Could not set MoveDirectionReceive!\n" + this + " already has an entity with Code.Ecs.Components.MoveDirectionReceiveComponent!",
                "You should check if the context already has a moveDirectionReceiveEntity before setting it or use context.ReplaceMoveDirectionReceive().");
        }
        var entity = CreateEntity();
        entity.AddMoveDirectionReceive(newValue);
        return entity;
    }

    public void ReplaceMoveDirectionReceive(UnityEngine.Vector3 newValue) {
        var entity = moveDirectionReceiveEntity;
        if (entity == null) {
            entity = SetMoveDirectionReceive(newValue);
        } else {
            entity.ReplaceMoveDirectionReceive(newValue);
        }
    }

    public void RemoveMoveDirectionReceive() {
        moveDirectionReceiveEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.Ecs.Components.MoveDirectionReceiveComponent moveDirectionReceive { get { return (Code.Ecs.Components.MoveDirectionReceiveComponent)GetComponent(InputComponentsLookup.MoveDirectionReceive); } }
    public bool hasMoveDirectionReceive { get { return HasComponent(InputComponentsLookup.MoveDirectionReceive); } }

    public void AddMoveDirectionReceive(UnityEngine.Vector3 newValue) {
        var index = InputComponentsLookup.MoveDirectionReceive;
        var component = (Code.Ecs.Components.MoveDirectionReceiveComponent)CreateComponent(index, typeof(Code.Ecs.Components.MoveDirectionReceiveComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveDirectionReceive(UnityEngine.Vector3 newValue) {
        var index = InputComponentsLookup.MoveDirectionReceive;
        var component = (Code.Ecs.Components.MoveDirectionReceiveComponent)CreateComponent(index, typeof(Code.Ecs.Components.MoveDirectionReceiveComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveDirectionReceive() {
        RemoveComponent(InputComponentsLookup.MoveDirectionReceive);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMoveDirectionReceive;

    public static Entitas.IMatcher<InputEntity> MoveDirectionReceive {
        get {
            if (_matcherMoveDirectionReceive == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.MoveDirectionReceive);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMoveDirectionReceive = matcher;
            }

            return _matcherMoveDirectionReceive;
        }
    }
}
