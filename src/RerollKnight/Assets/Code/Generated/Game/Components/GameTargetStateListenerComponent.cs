//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TargetStateListenerComponent targetStateListener { get { return (TargetStateListenerComponent)GetComponent(GameComponentsLookup.TargetStateListener); } }
    public bool hasTargetStateListener { get { return HasComponent(GameComponentsLookup.TargetStateListener); } }

    public void AddTargetStateListener(System.Collections.Generic.List<ITargetStateListener> newValue) {
        var index = GameComponentsLookup.TargetStateListener;
        var component = (TargetStateListenerComponent)CreateComponent(index, typeof(TargetStateListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTargetStateListener(System.Collections.Generic.List<ITargetStateListener> newValue) {
        var index = GameComponentsLookup.TargetStateListener;
        var component = (TargetStateListenerComponent)CreateComponent(index, typeof(TargetStateListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTargetStateListener() {
        RemoveComponent(GameComponentsLookup.TargetStateListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTargetStateListener;

    public static Entitas.IMatcher<GameEntity> TargetStateListener {
        get {
            if (_matcherTargetStateListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TargetStateListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTargetStateListener = matcher;
            }

            return _matcherTargetStateListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddTargetStateListener(ITargetStateListener value) {
        var listeners = hasTargetStateListener
            ? targetStateListener.value
            : new System.Collections.Generic.List<ITargetStateListener>();
        listeners.Add(value);
        ReplaceTargetStateListener(listeners);
    }

    public void RemoveTargetStateListener(ITargetStateListener value, bool removeComponentWhenEmpty = true) {
        var listeners = targetStateListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTargetStateListener();
        } else {
            ReplaceTargetStateListener(listeners);
        }
    }
}
