//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class RequestEntity {

    static readonly Code.DragComponent dragComponent = new Code.DragComponent();

    public bool isDrag {
        get { return HasComponent(RequestComponentsLookup.Drag); }
        set {
            if (value != isDrag) {
                var index = RequestComponentsLookup.Drag;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : dragComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class RequestMatcher {

    static Entitas.IMatcher<RequestEntity> _matcherDrag;

    public static Entitas.IMatcher<RequestEntity> Drag {
        get {
            if (_matcherDrag == null) {
                var matcher = (Entitas.Matcher<RequestEntity>)Entitas.Matcher<RequestEntity>.AllOf(RequestComponentsLookup.Drag);
                matcher.componentNames = RequestComponentsLookup.componentNames;
                _matcherDrag = matcher;
            }

            return _matcherDrag;
        }
    }
}
