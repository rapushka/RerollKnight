//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity resourcesEntity { get { return GetGroup(ServicesMatcher.Resources).GetSingleEntity(); } }
    public Code.ResourcesComponent resources { get { return resourcesEntity.resources; } }
    public bool hasResources { get { return resourcesEntity != null; } }

    public ServicesEntity SetResources(Code.IResourcesService newValue) {
        if (hasResources) {
            throw new Entitas.EntitasException("Could not set Resources!\n" + this + " already has an entity with Code.ResourcesComponent!",
                "You should check if the context already has a resourcesEntity before setting it or use context.ReplaceResources().");
        }
        var entity = CreateEntity();
        entity.AddResources(newValue);
        return entity;
    }

    public void ReplaceResources(Code.IResourcesService newValue) {
        var entity = resourcesEntity;
        if (entity == null) {
            entity = SetResources(newValue);
        } else {
            entity.ReplaceResources(newValue);
        }
    }

    public void RemoveResources() {
        resourcesEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public Code.ResourcesComponent resources { get { return (Code.ResourcesComponent)GetComponent(ServicesComponentsLookup.Resources); } }
    public bool hasResources { get { return HasComponent(ServicesComponentsLookup.Resources); } }

    public void AddResources(Code.IResourcesService newValue) {
        var index = ServicesComponentsLookup.Resources;
        var component = (Code.ResourcesComponent)CreateComponent(index, typeof(Code.ResourcesComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceResources(Code.IResourcesService newValue) {
        var index = ServicesComponentsLookup.Resources;
        var component = (Code.ResourcesComponent)CreateComponent(index, typeof(Code.ResourcesComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveResources() {
        RemoveComponent(ServicesComponentsLookup.Resources);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherResources;

    public static Entitas.IMatcher<ServicesEntity> Resources {
        get {
            if (_matcherResources == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.Resources);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherResources = matcher;
            }

            return _matcherResources;
        }
    }
}
