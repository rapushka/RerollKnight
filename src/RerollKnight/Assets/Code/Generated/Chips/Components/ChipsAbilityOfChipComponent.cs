//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public Code.AbilityOfChipComponent abilityOfChip { get { return (Code.AbilityOfChipComponent)GetComponent(ChipsComponentsLookup.AbilityOfChip); } }
    public bool hasAbilityOfChip { get { return HasComponent(ChipsComponentsLookup.AbilityOfChip); } }

    public void AddAbilityOfChip(GameEntity newValue) {
        var index = ChipsComponentsLookup.AbilityOfChip;
        var component = (Code.AbilityOfChipComponent)CreateComponent(index, typeof(Code.AbilityOfChipComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAbilityOfChip(GameEntity newValue) {
        var index = ChipsComponentsLookup.AbilityOfChip;
        var component = (Code.AbilityOfChipComponent)CreateComponent(index, typeof(Code.AbilityOfChipComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAbilityOfChip() {
        RemoveComponent(ChipsComponentsLookup.AbilityOfChip);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherAbilityOfChip;

    public static Entitas.IMatcher<ChipsEntity> AbilityOfChip {
        get {
            if (_matcherAbilityOfChip == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.AbilityOfChip);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherAbilityOfChip = matcher;
            }

            return _matcherAbilityOfChip;
        }
    }
}
