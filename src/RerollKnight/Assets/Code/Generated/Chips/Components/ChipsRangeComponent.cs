//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public Code.RangeComponent range { get { return (Code.RangeComponent)GetComponent(ChipsComponentsLookup.Range); } }
    public bool hasRange { get { return HasComponent(ChipsComponentsLookup.Range); } }

    public void AddRange(int newValue) {
        var index = ChipsComponentsLookup.Range;
        var component = (Code.RangeComponent)CreateComponent(index, typeof(Code.RangeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRange(int newValue) {
        var index = ChipsComponentsLookup.Range;
        var component = (Code.RangeComponent)CreateComponent(index, typeof(Code.RangeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRange() {
        RemoveComponent(ChipsComponentsLookup.Range);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherRange;

    public static Entitas.IMatcher<ChipsEntity> Range {
        get {
            if (_matcherRange == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.Range);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherRange = matcher;
            }

            return _matcherRange;
        }
    }
}
