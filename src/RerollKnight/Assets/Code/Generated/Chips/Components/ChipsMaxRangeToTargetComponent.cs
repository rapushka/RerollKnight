//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ChipsEntity {

    public Code.MaxRangeToTargetComponent maxRangeToTarget { get { return (Code.MaxRangeToTargetComponent)GetComponent(ChipsComponentsLookup.MaxRangeToTarget); } }
    public bool hasMaxRangeToTarget { get { return HasComponent(ChipsComponentsLookup.MaxRangeToTarget); } }

    public void AddMaxRangeToTarget(int newValue) {
        var index = ChipsComponentsLookup.MaxRangeToTarget;
        var component = (Code.MaxRangeToTargetComponent)CreateComponent(index, typeof(Code.MaxRangeToTargetComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMaxRangeToTarget(int newValue) {
        var index = ChipsComponentsLookup.MaxRangeToTarget;
        var component = (Code.MaxRangeToTargetComponent)CreateComponent(index, typeof(Code.MaxRangeToTargetComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMaxRangeToTarget() {
        RemoveComponent(ChipsComponentsLookup.MaxRangeToTarget);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ChipsMatcher {

    static Entitas.IMatcher<ChipsEntity> _matcherMaxRangeToTarget;

    public static Entitas.IMatcher<ChipsEntity> MaxRangeToTarget {
        get {
            if (_matcherMaxRangeToTarget == null) {
                var matcher = (Entitas.Matcher<ChipsEntity>)Entitas.Matcher<ChipsEntity>.AllOf(ChipsComponentsLookup.MaxRangeToTarget);
                matcher.componentNames = ChipsComponentsLookup.componentNames;
                _matcherMaxRangeToTarget = matcher;
            }

            return _matcherMaxRangeToTarget;
        }
    }
}
