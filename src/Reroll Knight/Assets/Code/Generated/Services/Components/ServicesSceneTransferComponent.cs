//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesContext {

    public ServicesEntity sceneTransferEntity { get { return GetGroup(ServicesMatcher.SceneTransfer).GetSingleEntity(); } }
    public SceneTransferComponent sceneTransfer { get { return sceneTransferEntity.sceneTransfer; } }
    public bool hasSceneTransfer { get { return sceneTransferEntity != null; } }

    public ServicesEntity SetSceneTransfer(Code.SceneTransferComponent newValue) {
        if (hasSceneTransfer) {
            throw new Entitas.EntitasException("Could not set SceneTransfer!\n" + this + " already has an entity with SceneTransferComponent!",
                "You should check if the context already has a sceneTransferEntity before setting it or use context.ReplaceSceneTransfer().");
        }
        var entity = CreateEntity();
        entity.AddSceneTransfer(newValue);
        return entity;
    }

    public void ReplaceSceneTransfer(Code.SceneTransferComponent newValue) {
        var entity = sceneTransferEntity;
        if (entity == null) {
            entity = SetSceneTransfer(newValue);
        } else {
            entity.ReplaceSceneTransfer(newValue);
        }
    }

    public void RemoveSceneTransfer() {
        sceneTransferEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ServicesEntity {

    public SceneTransferComponent sceneTransfer { get { return (SceneTransferComponent)GetComponent(ServicesComponentsLookup.SceneTransfer); } }
    public bool hasSceneTransfer { get { return HasComponent(ServicesComponentsLookup.SceneTransfer); } }

    public void AddSceneTransfer(Code.SceneTransferComponent newValue) {
        var index = ServicesComponentsLookup.SceneTransfer;
        var component = (SceneTransferComponent)CreateComponent(index, typeof(SceneTransferComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSceneTransfer(Code.SceneTransferComponent newValue) {
        var index = ServicesComponentsLookup.SceneTransfer;
        var component = (SceneTransferComponent)CreateComponent(index, typeof(SceneTransferComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneTransfer() {
        RemoveComponent(ServicesComponentsLookup.SceneTransfer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ServicesMatcher {

    static Entitas.IMatcher<ServicesEntity> _matcherSceneTransfer;

    public static Entitas.IMatcher<ServicesEntity> SceneTransfer {
        get {
            if (_matcherSceneTransfer == null) {
                var matcher = (Entitas.Matcher<ServicesEntity>)Entitas.Matcher<ServicesEntity>.AllOf(ServicesComponentsLookup.SceneTransfer);
                matcher.componentNames = ServicesComponentsLookup.componentNames;
                _matcherSceneTransfer = matcher;
            }

            return _matcherSceneTransfer;
        }
    }
}
